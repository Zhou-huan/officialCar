<template>
  <div class="detail">
    <header-bar bacColor="#fff">
      <icon slot="left" name="arrow-left"  @click="toBack" class="icons" size="24px" color="#333"/>
      <div slot="center">
        <span class="title fC333 f32 fBold">调度详情</span>
      </div>
    </header-bar>
    <div class="title">
      <span>订单号：{{ detail.yong_che_no }}</span>
      <c-button class="btn-hollow" :clsName="stsCls[detail.apply_flow_state]">
        {{ detail.apply_flow_state | stsTxt(detail.apply_convoy_id) }}
      </c-button>
    </div>
    <div class="root">
      <h4>{{ detail.apply_use_address_1 }}<span v-if="detail.apply_use_address_2">({{ detail.apply_use_address_2}})</span></h4>
      <p>{{ detail.apply_use_time_str }} {{ detail.apply_use_time_str | getWeek}}<img src="@/assets/images/list-chu.png" alt=""></p>
      <div class="root-center">
        <img src="@/assets/images/list-jiantou.png" alt="">
        <span class="f24">{{ detail.apply_sx_pople }}</span>
      </div>
      <h4>{{ detail.apply_destination_1 }}<span v-if="detail.apply_destination_2">({{ detail.apply_destination_2 }})</span></h4>
      <p>{{ detail.apply_back_time_str }} {{ detail.apply_back_time_str | getWeek}}<img src="@/assets/images/list-gui.png" alt=""></p>
    </div>
    <div class="user-box f28">
      <div class="user">
        <div class="fC999">申请人：<span class="fC333 fBold">{{ detail.apply_name }}</span></div>
        <span>{{ detail.apply_name_phone }}</span>
      </div>
    </div>
    <div class="user-box f28">
      <div class="user">
        <div class="fC999">用车人：<span class="fC333 fBold">{{ detail.yong_che_ren }}</span></div>
        <span>{{ detail.apply_use_phone }}</span>
      </div>
      <div>
        <p v-if="detail.car_num">车牌号：{{ detail.car_num }}</p>
        <span>乘车人数：{{ detail.apply_man_num }}人</span>
      </div>
    </div>
    <ul class="detail-list f28">
      <li>
        <span class="fCccc">用车事由：</span>{{ detail.apply_remark_str }}
      </li>
      <li>
        <span class="fCccc">用车部门：</span> {{ detail.apply_dept_name }}
      </li>
      <li>
        <span class="fCccc">用车性质：</span>{{ detail.yong_che_xz }}
      </li>
      <li>
        <span class="fCccc">用车区域：</span> {{ detail.quyu_str }}
      </li>
      <li>
        <span class="fCccc">备注信息：</span>{{ detail.apply_bz }}
      </li>
    </ul>
    <div class="dispatch-choose" v-if="detail.apply_flow_state === 1 && detail.apply_convoy_id === 0 || (detail.apply_flow_state === 1 && detail.apply_convoy_id !== 0 && (detail.apply_type === 0 || (detail.apply_type === 1 && detail.car_sharing_apply_id === 0)))">
      <div class="choose-list">
        <p class="label">拼车选择</p>
        <div class="choose-item" v-if="carpoolList.length">
          <swipe-cell v-for="(pool, index) in carpoolList" :key="index">
            {{ pool.yongNo }}
            <template #right>
              <Button square text="删除" type="danger" class="delete-button" @click="toDel('carpool', index)"></Button>
            </template>
          </swipe-cell>
        </div>
        <p v-else class="placeholder" @click="toChoose('carpool')">点击选择拼车</p>
        <Button class="choose-btn btn-pin" plain type="info" @click="toChoose('carpool')">选择</Button>
      </div>
      <div class="choose-list">
        <p class="label">车队选择</p>
        <div class="choose-item" v-if="fleetList.length">
          <swipe-cell v-for="(fleet, index) in fleetList" :key="index">
            {{ fleet.name }}
            <template #right>
              <Button square text="删除" type="danger" class="delete-button" @click="toDel('fleet', index)"></Button>
            </template>
          </swipe-cell>
        </div>
        <p v-else class="placeholder"  @click="toChoose('fleet')">点击选择车队</p>
        <Button class="choose-btn btn-car" plain type="info" @click="toChoose('fleet')">选择</Button>
      </div>
    </div>
    <div class="btn-box" v-if="detail.apply_flow_state === 1 && detail.apply_convoy_id === 0">
      <div class="left" @click="toOpr('feedback')">
        <img src="@/assets/images/list-feedback.png" alt="">反馈
      </div>
      <div class="right">
        <button @click="toOpr('confirm')">确认</button>
      </div>
    </div>
    <div class="btn-box" v-if="detail.apply_flow_state === 1 && detail.apply_convoy_id !== 0 && (detail.apply_type === 0 || (detail.apply_type === 1 && detail.car_sharing_apply_id === 0))" :style="{justifyContent: 'center'}">
      <div class="right">
        <button @click="toOpr('dispatch')">重新调度</button>
        <button @click="toOpr('cancel')">取消调度</button>
      </div>
    </div>
    <popup v-model="showFeedback" :closeable="true" :close-on-click-overlay="false" :round="true" class="brief-popup">
      <cell-group title="请输入反馈原因或意见" class="cell-brief">
        <field type="textarea" v-model="reason" />
      </cell-group>
      <div class="btn-box">
        <Button :plain="true" @click="feedbackCancel">取消</Button>
        <Button type="info" :plain="true" @click="feedbackOk">确定</Button>
      </div>
    </popup>
  </div>
</template>

<script>
/**
 * 判断
 * apply_flow_state:
 * 1. = 0 待审批
 * 2. = 1 && (apply_convoy_id = 0 待调度, apply_convoy_id ！= 0 待派车)
 * ** apply_convoy_id != 0 待派车：
 * ** apply_type（0正常订单、1拼车订单）,  car_sharing_apply_id（0主订单、不等于0的为从订单，其保存的是主订单id）
 * ** apply_type = 0 || (apply_type = 1 && car_sharing_apply_id = 0 ) 时 重新调度 取消调度
 * 3. = 2 审批驳回
 * 4. = 3 待归队
 * 5. = 4 待评价
 * 6. = 5 已完成
 */
import HeaderBar from '@/components/header-bar/header-bar'
import { Icon, Toast, Popup, Button, Field, CellGroup, SwipeCell } from 'vant'
import { getApplyInfoById, auditRebut, dispatcherApply } from '@/libs/const'
import CButton from '@/components/button/button'
import moment from 'moment'
export default {
  components: {
    HeaderBar,
    Icon,
    Popup,
    Button,
    Field,
    CellGroup,
    CButton,
    SwipeCell
  },
  data () {
    return {
      detail: {},
      id: this.$route.query.id,
      state: this.$route.query.state,
      stsCls: {
        0: 'yellow',
        1: 'yellow',
        2: 'red',
        3: 'yellow',
        4: 'yellow',
        5: '',
        15: 'red'
      },
      showFeedback: false,
      reason: '',
      carpoolList: this.$store.state.carpoolData,
      fleetList: this.$store.state.fleetData
    }
  },
  mounted () {
    this.$nextTick(() => {
      this.getDetail()
    })
  },
  filters: {
    stsTxt (flow, convoy) {
      let text = ''
      const obj = {
        0: '待审批',
        1: '',
        2: '审批驳回',
        3: '待归队',
        4: '待评价',
        5: '已完成',
        15: '订单取消'
      }
      if (flow === 1) {
        if (convoy === 0) {
          text = '待调度'
        } else {
          text = '待派车'
        }
      } else {
        text = obj[flow]
      }
      return text
    },
    getWeek (val) {
      return moment(val).format('dddd')
    }
  },
  methods: {
    toBack () {
      this.$router.push({
        path: '/dispatchList',
        query: {}
      })
      this.$store.dispatch('SET_CARPOOL', [])
      this.$store.dispatch('SET_FLEET', [])
    },
    async getDetail () {
      await getApplyInfoById({ applyId: this.id }, (res) => {
        this.detail = res.carAppFrom
        if (this.detail.apply_flow_state === 1 && this.detail.apply_convoy_id !== 0 && (this.detail.apply_type === 0 || (this.detail.apply_type === 1 && this.detail.car_sharing_apply_id === 0))) {
          if (this.$store.state.carpoolData.length) {
            this.carpoolList = []
          }
        }
      })
    },
    async toOpr (type, state) {
      switch (type) {
        case 'confirm': { // 通过
          let carpoolIds = []
          if (this.carpoolList.length) {
            this.carpoolList.some((item, index) => {
              carpoolIds[index] = item.id
            })
          }
          await dispatcherApply({
            applyId: this.id,
            sharingApplys: carpoolIds.join(','),
            deptId: this.fleetList.length ? this.fleetList[0].id : '0'
          }, (res) => {
            Toast.success('操作成功')
            this.toBack()
          })
          break
        }
        case 'feedback': { // 反馈(驳回)
          this.showFeedback = true
          break
        }
        case 'dispatch': { // 重新调度
          break
        }
        case 'cancel': { // 取消调度
          break
        }
        default:
      }
    },
    feedbackCancel () {
      this.showFeedback = false
    },
    async feedbackOk () {
      await auditRebut({
        applyId: this.id,
        reason: this.reason
      }, (res) => {
        this.showFeedback = false
        Toast.success('操作成功')
        setTimeout(() => {
          this.toBack()
        }, 1000)
      })
    },
    toChoose (type) {
      let url = ''
      let query = {
        applyId: this.id
      }
      switch (type) {
        case 'carpool': {
          url = '/chooseCarpool'
          break
        }
        case 'fleet': {
          url = '/chooseFleet'
          query.sharingApplys = ''
        }
      }
      this.$router.push({
        path: url,
        query: query
      })
    },
    toDel (type, index) {
      if (type === 'carpool') {
        this.carpoolList.splice(index, 1)
        this.$store.dispatch('SET_CARPOOL', this.carpoolList)
      } else if (type === 'fleet') {
        this.fleetList.splice(index, 1)
        this.$store.dispatch('SET_FLEET', this.carpoolList)
      }
    }
  }
}
</script>

<style lang="less" scoped>
  @import '../../../assets/css/commonDetail.less';
</style>
